name: Durianpay CI CD

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push nginx
        uses: docker/build-push-action@v2
        with:
          context: ./app
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/durianpay:latest

      - name: Deploy to EC2 instance
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # Set up SSH private key
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the EC2 host to known hosts to prevent SSH warnings
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          # SSH into EC2 instance and pull the latest Docker image, then run it
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << 'EOF'
            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/durianpay:latest

            # Stop and remove the currently running container (if exists)
            docker stop durianpay || true
            docker rm durianpay || true

            # Run the new Docker container
            docker run -d --name durianpay -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/durianpay:latest
          EOF